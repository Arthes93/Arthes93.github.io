<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Victor</title>
    <link>https://ckck803.github.io/</link>
    
    <atom:link href="https://ckck803.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>백문이 불여일타</description>
    <pubDate>Thu, 25 Mar 2021 17:13:02 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>백준 - 세그먼트 트리</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-segment-tree/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-segment-tree/</guid>
      <pubDate>Thu, 25 Mar 2021 17:12:13 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-세그먼트-트리&quot;&gt;&lt;a href=&quot;#백준-세그먼트-트리&quot; class=&quot;headerlink&quot; title=&quot;백준 세그먼트 트리&quot;&gt;&lt;/a&gt;백준 세그먼트</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-세그먼트-트리"><a href="#백준-세그먼트-트리" class="headerlink" title="백준 세그먼트 트리"></a>백준 세그먼트 트리</h1><h2 id="세그먼트-트리"><a href="#세그먼트-트리" class="headerlink" title="세그먼트 트리"></a>세그먼트 트리</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td><a href="2042/">2042</a></td><td>구간 합 구하기</td><td align="center"></td><td align="center"></td><td align="center">기본 유형</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-segment-tree/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 슬라이딩 윈도우</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-sliding-window/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-sliding-window/</guid>
      <pubDate>Thu, 25 Mar 2021 17:10:47 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-슬라이딩-윈도우&quot;&gt;&lt;a href=&quot;#백준-슬라이딩-윈도우&quot; class=&quot;headerlink&quot; title=&quot;백준 슬라이딩 윈도우&quot;&gt;&lt;/a&gt;백준 슬</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-슬라이딩-윈도우"><a href="#백준-슬라이딩-윈도우" class="headerlink" title="백준 슬라이딩 윈도우"></a>백준 슬라이딩 윈도우</h1><h2 id="슬라이딩-윈도우"><a href="#슬라이딩-윈도우" class="headerlink" title="슬라이딩 윈도우"></a>슬라이딩 윈도우</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>2075</td><td><a href="2075/README.md">N번째 큰 수</a></td><td align="center"></td><td align="center"></td><td align="center">슬라이딩 윈도우 기본 유형</td></tr><tr><td>2096</td><td><a href="2096/README.md">내려가기</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-sliding-window/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 수학</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-math/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-math/</guid>
      <pubDate>Thu, 25 Mar 2021 17:09:10 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-수학&quot;&gt;&lt;a href=&quot;#백준-수학&quot; class=&quot;headerlink&quot; title=&quot;백준 - 수학&quot;&gt;&lt;/a&gt;백준 - 수학&lt;/h1&gt;&lt;h2 id=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-수학"><a href="#백준-수학" class="headerlink" title="백준 - 수학"></a>백준 - 수학</h1><h2 id="수학"><a href="#수학" class="headerlink" title="수학"></a>수학</h2><table><thead><tr><th>문제</th><th>이름</th><th>링크</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td><a href="1085/">1085</a></td><td>직사각형에서 탈출</td><td><a href="https://www.acmicpc.net/problem/1085">https://www.acmicpc.net/problem/1085</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1644/">1644</a></td><td>소수의 연속합</td><td><a href="https://www.acmicpc.net/problem/1644">https://www.acmicpc.net/problem/1644</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1712/">1712</a></td><td>손익분기점</td><td><a href="https://www.acmicpc.net/problem/1712">https://www.acmicpc.net/problem/1712</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1722/">1722</a></td><td>순열의 순서</td><td><a href="https://www.acmicpc.net/problem/1722">https://www.acmicpc.net/problem/1722</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1978/">1978</a></td><td>알파벳</td><td><a href="https://www.acmicpc.net/problem/1978">https://www.acmicpc.net/problem/1978</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1990/">1990</a></td><td>소수인팬린드롬</td><td><a href="https://www.acmicpc.net/problem/1990">https://www.acmicpc.net/problem/1990</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2292/">2292</a></td><td>벌집</td><td><a href="https://www.acmicpc.net/problem/2292">https://www.acmicpc.net/problem/2292</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2839/">2839</a></td><td>설탈배달</td><td><a href="https://www.acmicpc.net/problem/2839">https://www.acmicpc.net/problem/2839</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2960/">2960</a></td><td>에라토스테네스의 체</td><td><a href="https://www.acmicpc.net/problem/2960">https://www.acmicpc.net/problem/2960</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="10819/">10819</a></td><td>차이를 최대로</td><td><a href="https://www.acmicpc.net/problem/10819">https://www.acmicpc.net/problem/10819</a></td><td align="center"></td><td align="center">순열, <code>next_permutation</code></td></tr><tr><td><a href="10950/">10950</a></td><td>A+B - 3</td><td><a href="https://www.acmicpc.net/problem/10950">https://www.acmicpc.net/problem/10950</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="10952/">10952</a></td><td>A+B - 5</td><td><a href="https://www.acmicpc.net/problem/10952">https://www.acmicpc.net/problem/10952</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="11021/">11021</a></td><td>A+B - 7</td><td><a href="https://www.acmicpc.net/problem/11021">https://www.acmicpc.net/problem/11021</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="11022/">11022</a></td><td>A+B - 8</td><td><a href="https://www.acmicpc.net/problem/11022">https://www.acmicpc.net/problem/11022</a></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-math/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 비트마스킹</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-bitmasking/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-bitmasking/</guid>
      <pubDate>Thu, 25 Mar 2021 17:07:50 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-비트-마스킹&quot;&gt;&lt;a href=&quot;#백준-비트-마스킹&quot; class=&quot;headerlink&quot; title=&quot;백준 - 비트 마스킹&quot;&gt;&lt;/a&gt;백준 - 비트 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-비트-마스킹"><a href="#백준-비트-마스킹" class="headerlink" title="백준 - 비트 마스킹"></a>백준 - 비트 마스킹</h1><h2 id="비트-마스크"><a href="#비트-마스크" class="headerlink" title="비트 마스크"></a>비트 마스크</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>2064</td><td><a href="2064/README.md">IP 주소</a></td><td align="center"></td><td align="center"></td><td align="center">토크나이징, 비트 연산</td></tr><tr><td>11723</td><td><a href="11723/README.md">집합</a></td><td align="center"></td><td align="center"></td><td align="center">기본유형</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-bitmasking/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 유니온 파인드</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-union-find/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-union-find/</guid>
      <pubDate>Thu, 25 Mar 2021 17:06:18 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-유니온-파인드&quot;&gt;&lt;a href=&quot;#백준-유니온-파인드&quot; class=&quot;headerlink&quot; title=&quot;백준 유니온 파인드&quot;&gt;&lt;/a&gt;백준 유니온 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-유니온-파인드"><a href="#백준-유니온-파인드" class="headerlink" title="백준 유니온 파인드"></a>백준 유니온 파인드</h1><h2 id="유니온-파인드"><a href="#유니온-파인드" class="headerlink" title="유니온 파인드"></a>유니온 파인드</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>1717</td><td><a href="1717/README.md">집합의 표현</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>1976</td><td><a href="1976/README.md">여행가자</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>4195</td><td><a href="4195/README.md">친구 네트워크</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>10774</td><td><a href="10774/README.md">저지</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>10775</td><td><a href="10775/README.md">공항</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-union-find/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 최소 스패닝 트리</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-minimum-spaning-tree/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-minimum-spaning-tree/</guid>
      <pubDate>Thu, 25 Mar 2021 17:04:36 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-최소-스패닝-트리&quot;&gt;&lt;a href=&quot;#백준-최소-스패닝-트리&quot; class=&quot;headerlink&quot; title=&quot;백준 최소 스패닝 트리&quot;&gt;&lt;/a&gt;백</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-최소-스패닝-트리"><a href="#백준-최소-스패닝-트리" class="headerlink" title="백준 최소 스패닝 트리"></a>백준 최소 스패닝 트리</h1><h2 id="최소-스패닝-트리"><a href="#최소-스패닝-트리" class="headerlink" title="최소 스패닝 트리"></a>최소 스패닝 트리</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>1196</td><td><a href="1197/README.md">최소 스패닝 트리</a></td><td align="center"></td><td align="center"></td><td align="center">최소 스패닝 트리 기본 유형</td></tr><tr><td>9372</td><td><a href="9372/README.md">상근이의 여행</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>17472</td><td><a href="17472/README.md">다리 만들기 2</a></td><td align="center"></td><td align="center"></td><td align="center">삼성, 최소 스패닝 트리</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-minimum-spaning-tree/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 투 포인터</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-twopointer/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-twopointer/</guid>
      <pubDate>Thu, 25 Mar 2021 17:02:50 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-투-포인터&quot;&gt;&lt;a href=&quot;#백준-투-포인터&quot; class=&quot;headerlink&quot; title=&quot;백준 - 투 포인터&quot;&gt;&lt;/a&gt;백준 - 투 포인터&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-투-포인터"><a href="#백준-투-포인터" class="headerlink" title="백준 - 투 포인터"></a>백준 - 투 포인터</h1><h2 id="투-포인터"><a href="#투-포인터" class="headerlink" title="투 포인터"></a>투 포인터</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>1484</td><td><a href="1484/README.md">다이어트</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>1806</td><td><a href="1806/README.md">부분합</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2003</td><td><a href="2003/README.md">수들의 합 2</a></td><td align="center"></td><td align="center"></td><td align="center">기본 유형</td></tr><tr><td>2230</td><td><a href="2230/README.md">수 고르기</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-twopointer/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 백트래킹</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-backtracking/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-backtracking/</guid>
      <pubDate>Thu, 25 Mar 2021 17:01:10 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-백트래킹&quot;&gt;&lt;a href=&quot;#백준-백트래킹&quot; class=&quot;headerlink&quot; title=&quot;백준 백트래킹&quot;&gt;&lt;/a&gt;백준 백트래킹&lt;/h1&gt;&lt;h2 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-백트래킹"><a href="#백준-백트래킹" class="headerlink" title="백준 백트래킹"></a>백준 백트래킹</h1><h2 id="백트래킹"><a href="#백트래킹" class="headerlink" title="백트래킹"></a>백트래킹</h2><table><thead><tr><th>문제</th><th>이름</th><th>링크</th><th>정리여부</th><th>비고</th></tr></thead><tbody><tr><td><a href="1987/">1987</a></td><td>병든 나이트</td><td><a href="https://www.acmicpc.net/problem/1987">https://www.acmicpc.net/problem/1987</a></td><td></td><td></td></tr><tr><td><a href="2580/">2580</a></td><td>스도쿠</td><td><a href="https://www.acmicpc.net/problem/2580">https://www.acmicpc.net/problem/2580</a></td><td></td><td></td></tr><tr><td><a href="4574/">4574</a></td><td>스도미노쿠</td><td><a href="https://www.acmicpc.net/problem/4574">https://www.acmicpc.net/problem/4574</a></td><td></td><td></td></tr><tr><td><a href="6603/">6603</a></td><td>로또</td><td><a href="https://www.acmicpc.net/problem/6603">https://www.acmicpc.net/problem/6603</a></td><td></td><td></td></tr><tr><td><a href="9663/">9663</a></td><td>N-Queen</td><td><a href="https://www.acmicpc.net/problem/9663">https://www.acmicpc.net/problem/9663</a></td><td></td><td></td></tr><tr><td><a href="16987/">16987</a></td><td>계란으로 계란치기</td><td><a href="https://www.acmicpc.net/problem/16987">https://www.acmicpc.net/problem/16987</a></td><td></td><td></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-backtracking/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 이분탐색</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-binary/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-binary/</guid>
      <pubDate>Thu, 25 Mar 2021 16:58:58 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-이분탐색&quot;&gt;&lt;a href=&quot;#백준-이분탐색&quot; class=&quot;headerlink&quot; title=&quot;백준 이분탐색&quot;&gt;&lt;/a&gt;백준 이분탐색&lt;/h1&gt;&lt;h2 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-이분탐색"><a href="#백준-이분탐색" class="headerlink" title="백준 이분탐색"></a>백준 이분탐색</h1><h2 id="이분-탐색"><a href="#이분-탐색" class="headerlink" title="이분 탐색"></a>이분 탐색</h2><table><thead><tr><th>문제</th><th>이름</th><th>링크</th><th align="center">정리여부</th><th>비고</th></tr></thead><tbody><tr><td><a href="1620/">1620</a></td><td>해커톤</td><td><a href="https://www.acmicpc.net/problem/1620">https://www.acmicpc.net/problem/1620</a></td><td align="center"></td><td></td></tr><tr><td><a href="1920/">1920</a></td><td>수찾기</td><td><a href="https://www.acmicpc.net/problem/1920">https://www.acmicpc.net/problem/1920</a></td><td align="center"></td><td></td></tr><tr><td><a href="1939/">1939</a></td><td>중량제한</td><td><a href="https://www.acmicpc.net/problem/13397">https://www.acmicpc.net/problem/13397</a></td><td align="center"></td><td></td></tr><tr><td><a href="2110/">2110</a></td><td>공유기 설치</td><td><a href="https://www.acmicpc.net/problem/2210">https://www.acmicpc.net/problem/2210</a></td><td align="center"></td><td></td></tr><tr><td><a href="2343/">2343</a></td><td>기타레슨</td><td><a href="https://www.acmicpc.net/problem/2343">https://www.acmicpc.net/problem/2343</a></td><td align="center">O</td><td>겁나 많이 틀림</td></tr><tr><td><a href="2792/">2792</a></td><td>보석상자</td><td><a href="https://www.acmicpc.net/problem/2792">https://www.acmicpc.net/problem/2792</a></td><td align="center">O</td><td>중요! 다시 풀어보기</td></tr><tr><td><a href="2805/">2805</a></td><td>나무자르기</td><td><a href="https://www.acmicpc.net/problem/2805">https://www.acmicpc.net/problem/2805</a></td><td align="center"></td><td></td></tr><tr><td><a href="2869/">2869</a></td><td>달팽이는 올라가고 싶다</td><td><a href="https://www.acmicpc.net/problem/2869">https://www.acmicpc.net/problem/2869</a></td><td align="center"></td><td></td></tr><tr><td><a href="3020/">3020</a></td><td>개똥벌레</td><td><a href="https://www.acmicpc.net/problem/3020">https://www.acmicpc.net/problem/3020</a></td><td align="center"></td><td></td></tr><tr><td><a href="10815/">10815</a></td><td>숫자카드</td><td><a href="https://www.acmicpc.net/problem/10815">https://www.acmicpc.net/problem/10815</a></td><td align="center"></td><td></td></tr><tr><td><a href="10816/">10816</a></td><td>숫자카드2</td><td><a href="https://www.acmicpc.net/problem/10816">https://www.acmicpc.net/problem/10816</a></td><td align="center"></td><td></td></tr><tr><td><a href="13397/">13397</a></td><td>구간 나누기2</td><td><a href="https://www.acmicpc.net/problem/13397">https://www.acmicpc.net/problem/13397</a></td><td align="center"></td><td></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-binary/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - BFS</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-bfs/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-bfs/</guid>
      <pubDate>Thu, 25 Mar 2021 16:57:16 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-BFS&quot;&gt;&lt;a href=&quot;#백준-BFS&quot; class=&quot;headerlink&quot; title=&quot;백준 BFS&quot;&gt;&lt;/a&gt;백준 BFS&lt;/h1&gt;&lt;h2 id=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-BFS"><a href="#백준-BFS" class="headerlink" title="백준 BFS"></a>백준 BFS</h1><h2 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h2><h3 id="기본-유형"><a href="#기본-유형" class="headerlink" title="기본 유형"></a>기본 유형</h3><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린횟수</th><th align="center">정리여부</th><th align="center">비고</th><th align="center">c++</th><th align="center">java</th><th align="center">python</th></tr></thead><tbody><tr><td>1260</td><td><a href="1260/README.md">DFS와 BFS</a></td><td align="center"></td><td align="center"></td><td align="center">기초</td><td align="center"></td><td align="center"></td><td align="center">O</td></tr><tr><td>1953</td><td><a href="1953/README.md">팀 배분</a></td><td align="center">0</td><td align="center">O</td><td align="center">이분 그래프</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2178</td><td><a href="2178/README.md">미로 탐색</a></td><td align="center"></td><td align="center"></td><td align="center">최단 거리</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr></tbody></table><h3 id="전체-문제"><a href="#전체-문제" class="headerlink" title="전체 문제"></a>전체 문제</h3><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린횟수</th><th align="center">정리여부</th><th align="center">비고</th><th align="center">c++</th><th align="center">java</th><th align="center">python</th></tr></thead><tbody><tr><td>1012</td><td><a href="1012/README.md">유기농 배추</a></td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1194</td><td><a href="1194/README.md">달이 차오른다, 가자</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1260</td><td><a href="1260/README.md">DFS와 BFS</a></td><td align="center"></td><td align="center"></td><td align="center">기초</td><td align="center">O</td><td align="center"></td><td align="center">O</td></tr><tr><td>1600</td><td><a href="1600/README.md">말이 되고픈 원숭이</a></td><td align="center">5</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1707</td><td><a href="1707/README.md">이분 그래프</a></td><td align="center">4</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1726</td><td><a href="1726/README.md">로봇</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1939</td><td><a href="1939/README.md">중량제한</a></td><td align="center">3</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1953</td><td><a href="1953/README.md">팀 배분</a></td><td align="center">0</td><td align="center">O</td><td align="center">이분 그래프</td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1963</td><td><a href="1963/README.md">소수 경로</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>1967</td><td><a href="1967/README.md">트리의 지름</a></td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>2146</td><td><a href="2146/README.md">다리 만들기</a></td><td align="center">5</td><td align="center"></td><td align="center"></td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td>2178</td><td><a href="2178/README.md">미로 탐색</a></td><td align="center"></td><td align="center"></td><td align="center">최단 거리</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td>2206</td><td><a href="2206/README.md">벽 부수고 이동하기</a></td><td align="center">5</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2251</td><td><a href="2251/README.md">물통</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2234</td><td><a href="2234/README.md2234">성곽</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2468</td><td><a href="2468/README.md">안전 영역</a></td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2573</td><td><a href="2573/README.md2573">빙산</a></td><td align="center">3</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2583</td><td><a href="2583/README.md">영역 구하기</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2589</td><td><a href="2589/README.md">보물섬</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2606</td><td><a href="2606/README.md">바이러스</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2644</td><td><a href="2644/README.md">촌수 계산</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2667</td><td><a href="2667/README.md">단지번호 붙이기</a></td><td align="center">4</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2933</td><td><a href="2933/README.md">미네랄</a></td><td align="center">5</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>5014</td><td><a href="5014/README.md">스타트와 링크</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>5213</td><td><a href="5213/README.md">과외맨</a></td><td align="center">6</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>5427</td><td><a href="5427/README.md">불</a></td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>6087</td><td><a href="6087/README.md">레이저 통신</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>6593</td><td><a href="6593/README.md">상범 빌딩</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>7576</td><td><a href="7576/README.md">토마토</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>9019</td><td><a href="9019/README.md">DSLR</a></td><td align="center">4</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>9205</td><td><a href="9205/README.md">맥주 마시면서 걸어가기</a></td><td align="center">3</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>9372</td><td><a href="9372/README.md">상근이의 여행</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>12886</td><td><a href="12886/README.md">돌 그룹</a></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>15558</td><td><a href="15558/README.md">점프 게임</a></td><td align="center">11</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>16236</td><td><a href="16236/README.md">아기 상어</a></td><td align="center">4</td><td align="center">O</td><td align="center"><code>bfs</code>를 통해 거리구하기</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>16397</td><td><a href="16397/README.md">탈출</a></td><td align="center">5</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>16933</td><td><a href="16933/README.md">벽 부수고 이동하기3</a></td><td align="center">6</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>16959</td><td><a href="16959/README.md">체스판 여행 1</a></td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>17471</td><td><a href="17471/README.md">게리맨더링</a></td><td align="center">4</td><td align="center">O</td><td align="center">조합, bfs, 삼성</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>17836</td><td><a href="17836/README.md">공주님을 구해라</a></td><td align="center">5</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>18809</td><td><a href="18809/README.md">Gaaaaaaaaaarden</a></td><td align="center">0</td><td align="center"></td><td align="center">조합, bfs, 삼성</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-bfs/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - DFS</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-dfs/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-dfs/</guid>
      <pubDate>Thu, 25 Mar 2021 16:55:55 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-DFS&quot;&gt;&lt;a href=&quot;#백준-DFS&quot; class=&quot;headerlink&quot; title=&quot;백준 DFS&quot;&gt;&lt;/a&gt;백준 DFS&lt;/h1&gt;&lt;h2 id=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-DFS"><a href="#백준-DFS" class="headerlink" title="백준 DFS"></a>백준 DFS</h1><h2 id="DFS-깊이-우선-탐색"><a href="#DFS-깊이-우선-탐색" class="headerlink" title="DFS(깊이 우선 탐색)"></a>DFS(깊이 우선 탐색)</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린횟수</th><th align="center">정리여부</th><th align="center">비고</th><th align="center">c++</th><th align="center">java</th><th align="center">python</th></tr></thead><tbody><tr><td>1260</td><td><a href="1260/README.md">DFS와 BFS</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>1325</td><td><a href="1325/README.md">효율적인 해킹</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>9466</td><td><a href="9466/README.md">텀 프로젝트</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>10026</td><td><a href="10026/README.md">적록색약</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>15649</td><td><a href="15649/README.md">N과 M(1)</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>15650</td><td><a href="15650/README.md">N과 M(2)</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>15651</td><td><a href="15651/README.md">N과 M(3)</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>15652</td><td><a href="15652/README.md">N과 M(4)</a></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-dfs/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 문자열 처리</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-string/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-string/</guid>
      <pubDate>Thu, 25 Mar 2021 16:52:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-문자열-처리&quot;&gt;&lt;a href=&quot;#백준-문자열-처리&quot; class=&quot;headerlink&quot; title=&quot;백준 문자열 처리&quot;&gt;&lt;/a&gt;백준 문자열 처리&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-문자열-처리"><a href="#백준-문자열-처리" class="headerlink" title="백준 문자열 처리"></a>백준 문자열 처리</h1><h2 id="문자열-처리"><a href="#문자열-처리" class="headerlink" title="문자열 처리"></a>문자열 처리</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">정리여부</th><th align="center">비고</th><th align="center">cpp</th><th align="center">java</th><th align="center">python</th></tr></thead><tbody><tr><td><a href="1032/">1032</a></td><td>명령 프롬프트</td><td align="center"></td><td align="center">문자열 속 문자, 문자열 비교</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="1152/">1152</a></td><td>단어의 개수</td><td align="center"></td><td align="center">문자열 분리, 문자열 토큰화</td><td align="center"></td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="1157/">1157</a></td><td>단어 공부</td><td align="center"></td><td align="center">소문자 -&gt; 대문자</td><td align="center"></td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="1296/">1296</a></td><td>데이트</td><td align="center"></td><td align="center">문자열 정렬</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="1316/">1316</a></td><td>그룹 단어 체커</td><td align="center"></td><td align="center">문자열 속 문자 찾기</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="1475/">1475</a></td><td>방 번호</td><td align="center"></td><td align="center">문자열 속 문자</td><td align="center">O</td><td align="center"></td><td align="center">O</td></tr><tr><td><a href="2064/">2064</a></td><td>IP 주소</td><td align="center"></td><td align="center">토크나이징</td><td align="center">O</td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2743/">2743</a></td><td>단어 길이 재기</td><td align="center"></td><td align="center">문자열 길이</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="2857/">2857</a></td><td>FBI</td><td align="center"></td><td align="center">문자열 속 단어 찾기</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="2902/">2902</a></td><td>KMP는 왜 KMP일까?</td><td align="center"></td><td align="center">문자열 토큰화</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="2908/">2908</a></td><td>상수</td><td align="center"></td><td align="center">문자열 뒤집기</td><td align="center">O</td><td align="center"></td><td align="center">O</td></tr><tr><td><a href="2941/">2941</a></td><td>크로아티아 문자</td><td align="center"></td><td align="center">문자열 속 문자 찾기, 문자열 대치</td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="5586/">5586</a></td><td>JOI와 IOI</td><td align="center"></td><td align="center">문자열 분리<code>substr</code></td><td align="center">O</td><td align="center">O</td><td align="center">O</td></tr><tr><td><a href="10808/">10808</a></td><td>알파벳 갯수</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="10809/">10809</a></td><td>알파벳 찾기</td><td align="center"></td><td align="center">문자 check하는 방법, dic 사용 방법</td><td align="center"></td><td align="center"></td><td align="center">O</td></tr><tr><td><a href="11654/">11654</a></td><td>아스키 코드</td><td align="center"></td><td align="center">아스키 코드 변환</td><td align="center"></td><td align="center"></td><td align="center">O</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-string/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 삼성 기출문제</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-samsung/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-samsung/</guid>
      <pubDate>Thu, 25 Mar 2021 16:50:28 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-삼성-기출문제&quot;&gt;&lt;a href=&quot;#백준-삼성-기출문제&quot; class=&quot;headerlink&quot; title=&quot;백준 삼성 기출문제&quot;&gt;&lt;/a&gt;백준 삼성 기</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-삼성-기출문제"><a href="#백준-삼성-기출문제" class="headerlink" title="백준 삼성 기출문제"></a>백준 삼성 기출문제</h1><h2 id="삼성-기출-문제"><a href="#삼성-기출-문제" class="headerlink" title="삼성 기출 문제"></a>삼성 기출 문제</h2><table><thead><tr><th>문제</th><th>이름</th><th>링크</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td><a href="1012/">1012</a></td><td>유기농 배추</td><td><a href="https://www.acmicpc.net/problem/1012">https://www.acmicpc.net/problem/1012</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1600/">1600</a></td><td>말이 되고픈 원숭이</td><td><a href="https://www.acmicpc.net/problem/1600">https://www.acmicpc.net/problem/1600</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1707/">1707</a></td><td>이분 그래프</td><td><a href="https://www.acmicpc.net/problem/1707">https://www.acmicpc.net/problem/1707</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1726/">1726</a></td><td>로봇</td><td><a href="https://www.acmicpc.net/problem/1726">https://www.acmicpc.net/problem/1726</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1939/">1939</a></td><td>중량제한</td><td><a href="https://www.acmicpc.net/problem/1939">https://www.acmicpc.net/problem/1939</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1953/">1953</a></td><td>팀 배분</td><td><a href="https://www.acmicpc.net/problem/1953">https://www.acmicpc.net/problem/1953</a></td><td align="center">O</td><td align="center">이분 그래프</td></tr><tr><td><a href="1963/">1963</a></td><td>소수 경로</td><td><a href="https://www.acmicpc.net/problem/1963">https://www.acmicpc.net/problem/1963</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1967/">1967</a></td><td>트리의 지름</td><td><a href="https://www.acmicpc.net/problem/1967">https://www.acmicpc.net/problem/1967</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2146/">2146</a></td><td>다리 만들기</td><td><a href="https://www.acmicpc.net/problem/2146">https://www.acmicpc.net/problem/2146</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2206/">2206</a></td><td>벽 부수고 이동하기</td><td><a href="https://www.acmicpc.net/problem/2206">https://www.acmicpc.net/problem/2206</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2251/">2251</a></td><td>물통</td><td><a href="https://www.acmicpc.net/problem/2251">https://www.acmicpc.net/problem/2251</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2468/">2468</a></td><td>안전 영역</td><td><a href="https://www.acmicpc.net/problem/2468">https://www.acmicpc.net/problem/2468</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2573/">2573</a></td><td>빙산</td><td><a href="https://www.acmicpc.net/problem/2573">https://www.acmicpc.net/problem/2573</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2583/">2583</a></td><td>영역 구하기</td><td><a href="https://www.acmicpc.net/problem/2583">https://www.acmicpc.net/problem/2583</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2589/">2589</a></td><td>보물섬</td><td><a href="https://www.acmicpc.net/problem/2589">https://www.acmicpc.net/problem/2589</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2606/">2606</a></td><td>바이러스</td><td><a href="https://www.acmicpc.net/problem/2606">https://www.acmicpc.net/problem/2606</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2644/">2644</a></td><td>촌수 계산</td><td><a href="https://www.acmicpc.net/problem/2644">https://www.acmicpc.net/problem/2644</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2667/">2667</a></td><td>단지번호 붙이기</td><td><a href="https://www.acmicpc.net/problem/2667">https://www.acmicpc.net/problem/2667</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="2933/">2933</a></td><td>미네랄</td><td><a href="https://www.acmicpc.net/problem/2933">https://www.acmicpc.net/problem/2933</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="5014/">5014</a></td><td>스타트와 링크</td><td><a href="https://www.acmicpc.net/problem/5014">https://www.acmicpc.net/problem/5014</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="5213/">5213</a></td><td>과외맨</td><td><a href="https://www.acmicpc.net/problem/5213">https://www.acmicpc.net/problem/5213</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="5427/">5427</a></td><td>불</td><td><a href="https://www.acmicpc.net/problem/5427">https://www.acmicpc.net/problem/5427</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="6087/">6087</a></td><td>레이저 통신</td><td><a href="https://www.acmicpc.net/problem/6087">https://www.acmicpc.net/problem/6087</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="6593/">6593</a></td><td>상범 빌딩</td><td><a href="https://www.acmicpc.net/problem/5427">https://www.acmicpc.net/problem/5427</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="7576/">7576</a></td><td>토마토</td><td><a href="https://www.acmicpc.net/problem/7576">https://www.acmicpc.net/problem/7576</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="9019/">9019</a></td><td>DSLR</td><td><a href="https://www.acmicpc.net/problem/9019">https://www.acmicpc.net/problem/9019</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="9205/">9205</a></td><td>맥주 마시면서 걸어가기</td><td><a href="https://www.acmicpc.net/problem/9205">https://www.acmicpc.net/problem/9205</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="9372/">9372</a></td><td>상근이의 여행</td><td><a href="https://www.acmicpc.net/problem/9372">https://www.acmicpc.net/problem/9372</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="12886/">12886</a></td><td>돌 그룹</td><td><a href="https://www.acmicpc.net/problem/12886">https://www.acmicpc.net/problem/12886</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="16236/">16236</a></td><td>아기 상어</td><td><a href="https://www.acmicpc.net/problem/16236">https://www.acmicpc.net/problem/16236</a></td><td align="center">O</td><td align="center"><code>bfs</code>를 통해 거리구하기</td></tr><tr><td><a href="16397/">16397</a></td><td>탈출</td><td><a href="https://www.acmicpc.net/problem/16397">https://www.acmicpc.net/problem/16397</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="17471/">17471</a></td><td>게리맨더링</td><td><a href="https://www.acmicpc.net/problem/17471">https://www.acmicpc.net/problem/17471</a></td><td align="center">O</td><td align="center">조합, bfs</td></tr><tr><td><a href="17836/">17836</a></td><td>공주님을 구해라</td><td><a href="https://www.acmicpc.net/problem/17836">https://www.acmicpc.net/problem/17836</a></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="브루트-포스"><a href="#브루트-포스" class="headerlink" title="브루트 포스"></a>브루트 포스</h2><table><thead><tr><th>문제</th><th align="left">이름</th><th>링크</th><th align="center">정리여부</th><th>비고</th></tr></thead><tbody><tr><td><a href="1051/">1051</a></td><td align="left">숫자 직사각형</td><td><a href="https://www.acmicpc.net/problem/1051">https://www.acmicpc.net/problem/1051</a></td><td align="center"></td><td></td></tr><tr><td><a href="1065/">1065</a></td><td align="left">한수</td><td><a href="https://www.acmicpc.net/problem/1065">https://www.acmicpc.net/problem/1065</a></td><td align="center"></td><td></td></tr><tr><td><a href="1182/">1182</a></td><td align="left">부분수열의 합</td><td><a href="https://www.acmicpc.net/problem/1182">https://www.acmicpc.net/problem/1182</a></td><td align="center"></td><td></td></tr><tr><td><a href="1436/">1436</a></td><td align="left">영화감독 슘</td><td><a href="https://www.acmicpc.net/problem/1436">https://www.acmicpc.net/problem/1436</a></td><td align="center"></td><td></td></tr><tr><td><a href="1748/">1748</a></td><td align="left">수 이어쓰기1</td><td><a href="https://www.acmicpc.net/problem/1748">https://www.acmicpc.net/problem/1748</a></td><td align="center"></td><td></td></tr><tr><td><a href="(2231/)">2231</a></td><td align="left">분해 합</td><td><a href="https://www.acmicpc.net/problem/2231">https://www.acmicpc.net/problem/2231</a></td><td align="center"></td><td></td></tr><tr><td><a href="2309/">2309</a></td><td align="left">일곱 난쟁이</td><td><a href="https://www.acmicpc.net/problem/2309">https://www.acmicpc.net/problem/2309</a></td><td align="center"></td><td></td></tr><tr><td><a href="2798/">2798</a></td><td align="left">블랙잭</td><td><a href="https://www.acmicpc.net/problem/2798">https://www.acmicpc.net/problem/2798</a></td><td align="center"></td><td></td></tr><tr><td><a href="3085/">3085</a></td><td align="left">사탕 게임</td><td><a href="https://www.acmicpc.net/problem/3085">https://www.acmicpc.net/problem/3085</a></td><td align="center"></td><td></td></tr><tr><td><a href="7568/">7568</a></td><td align="left">덩치</td><td><a href="https://www.acmicpc.net/problem/7568">https://www.acmicpc.net/problem/7568</a></td><td align="center"></td><td></td></tr><tr><td><a href="10448/">10448</a></td><td align="left">유레카 이론</td><td><a href="https://www.acmicpc.net/problem/10448">https://www.acmicpc.net/problem/10448</a></td><td align="center"></td><td></td></tr><tr><td><a href="12100/">12100</a></td><td align="left">2048(Easy)</td><td><a href="https://www.acmicpc.net/problem/12100">https://www.acmicpc.net/problem/12100</a></td><td align="center"></td><td></td></tr><tr><td><a href="12738/">12738</a></td><td align="left">가장 긴 증가하는 부분 수열3</td><td><a href="https://www.acmicpc.net/problem/12738">https://www.acmicpc.net/problem/12738</a></td><td align="center"></td><td></td></tr><tr><td><a href="13460/">13460</a></td><td align="left">구슬 탈출2</td><td><a href="https://www.acmicpc.net/problem/13460">https://www.acmicpc.net/problem/13460</a></td><td align="center">O</td><td>while문을 이용한 <code>bfs</code></td></tr><tr><td><a href="14502/">14502</a></td><td align="left">연구소</td><td><a href="https://www.acmicpc.net/problem/14502">https://www.acmicpc.net/problem/14502</a></td><td align="center"></td><td></td></tr><tr><td><a href="14888/">14888</a></td><td align="left">연산자 끼워넣기</td><td><a href="https://www.acmicpc.net/problem/14888">https://www.acmicpc.net/problem/14888</a></td><td align="center"></td><td></td></tr><tr><td><a href="14889/">14889</a></td><td align="left">스타크와 링크</td><td><a href="https://www.acmicpc.net/problem/14889">https://www.acmicpc.net/problem/14889</a></td><td align="center"></td><td></td></tr><tr><td><a href="15653/">15653</a></td><td align="left">구슬 탈출4</td><td><a href="https://www.acmicpc.net/problem/15653">https://www.acmicpc.net/problem/15653</a></td><td align="center">O</td><td>while문을 이용한 <code>bfs</code></td></tr><tr><td><a href="15683/">15683</a></td><td align="left">감시</td><td><a href="https://www.acmicpc.net/problem/15683">https://www.acmicpc.net/problem/15683</a></td><td align="center"></td><td></td></tr><tr><td><a href="15684/">15684</a></td><td align="left">사다리 조작</td><td><a href="https://www.acmicpc.net/problem/15684">https://www.acmicpc.net/problem/15684</a></td><td align="center"></td><td></td></tr><tr><td><a href="15686/">15686</a></td><td align="left">치킨 배달</td><td><a href="https://www.acmicpc.net/problem/14686">https://www.acmicpc.net/problem/14686</a></td><td align="center"></td><td></td></tr><tr><td><a href="16198/">16198</a></td><td align="left">에너지 모으기</td><td><a href="https://www.acmicpc.net/problem/16198">https://www.acmicpc.net/problem/16198</a></td><td align="center"></td><td></td></tr><tr><td><a href="17127/">17127</a></td><td align="left">벚꽃이 정보섬에 피어난 이유</td><td><a href="https://www.acmicpc.net/problem/17127">https://www.acmicpc.net/problem/17127</a></td><td align="center"></td><td></td></tr><tr><td><a href="17142/">17142</a></td><td align="left">연구소 3</td><td><a href="https://www.acmicpc.net/problem/17142">https://www.acmicpc.net/problem/17142</a></td><td align="center">O</td><td>조합, 경우의 수 탐색<code>bfs</code></td></tr><tr><td><a href="17779/">17779</a></td><td align="left">게리멘더링2</td><td><a href="https://www.acmicpc.net/problem/17779">https://www.acmicpc.net/problem/17779</a></td><td align="center">O</td><td>영역 나누어 탐색하기</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-samsung/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 - 자료구조</title>
      <link>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-structure/</link>
      <guid>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-structure/</guid>
      <pubDate>Thu, 25 Mar 2021 16:43:37 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-자료구조&quot;&gt;&lt;a href=&quot;#백준-자료구조&quot; class=&quot;headerlink&quot; title=&quot;백준 자료구조&quot;&gt;&lt;/a&gt;백준 자료구조&lt;/h1&gt;&lt;h2 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-자료구조"><a href="#백준-자료구조" class="headerlink" title="백준 자료구조"></a>백준 자료구조</h1><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>1158</td><td><a href="1158/">요세푸스 문제</a></td><td align="center">1</td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="스택"><a href="#스택" class="headerlink" title="스택"></a>스택</h2><table><thead><tr><th>문제</th><th>이름</th><th>링크</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td><a href="1406/">1406</a></td><td>에디터</td><td><a href="https://www.acmicpc.net/problem/1406">https://www.acmicpc.net/problem/1406</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="1918/">1918</a></td><td>후위표기식</td><td><a href="https://www.acmicpc.net/problem/1918">https://www.acmicpc.net/problem/1918</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="3015/">3015</a></td><td>오아시스 재결합</td><td><a href="https://www.acmicpc.net/problem/3015">https://www.acmicpc.net/problem/3015</a></td><td align="center">O</td><td align="center">다시 풀어보기</td></tr><tr><td><a href="9012/">9012</a></td><td>괄호</td><td><a href="https://www.acmicpc.net/problem/9012">https://www.acmicpc.net/problem/9012</a></td><td align="center"></td><td align="center"></td></tr><tr><td><a href="10799/">10799</a></td><td>쇠막대기</td><td><a href="https://www.acmicpc.net/problem/10799">https://www.acmicpc.net/problem/10799</a></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>1181</td><td><a href="1181/README.md">단어 정렬</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>1539</td><td><a href="1539/README.md">이진 검색 트리</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>2210</td><td><a href="2210/README.md">숫자판 점프</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>7785</td><td><a href="7785/README.md">회사에 있는 사람</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>1302</td><td></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>1539</td><td></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>9375</td><td></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="이진-검색-트리"><a href="#이진-검색-트리" class="headerlink" title="이진 검색 트리"></a>이진 검색 트리</h1><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>5639</td><td><a href="5639/README.md">이진 검색 트리</a></td><td align="center">1</td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="트라이"><a href="#트라이" class="headerlink" title="트라이"></a>트라이</h1><table><thead><tr><th>문제</th><th>이름</th><th align="center">틀린 횟수</th><th align="center">정리여부</th><th align="center">비고</th></tr></thead><tbody><tr><td>5052</td><td><a href="5052/README.md">전화번호 목록</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>5670</td><td><a href="5670/README.md">휴대폰 자판</a></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>13505</td><td></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC/">카테고리</category>
      
      
      <category domain="https://ckck803.github.io/tags/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC/">다익스트라</category>
      
      
      <comments>https://ckck803.github.io/2021/03/26/algorithm/category/baekjoon-structure/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Security - Authentication 객체와 저장 방식</title>
      <link>https://ckck803.github.io/2021/03/20/algorithm/category/springboot/security/study/authentication/</link>
      <guid>https://ckck803.github.io/2021/03/20/algorithm/category/springboot/security/study/authentication/</guid>
      <pubDate>Sat, 20 Mar 2021 13:25:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/springboot/security/spring-security/securitycontextholder.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;SecutiryContextHolder&quot;&gt;&lt;a href=&quot;#SecutiryCo</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/springboot/security/spring-security/securitycontextholder.png"></p><h2 id="SecutiryContextHolder"><a href="#SecutiryContextHolder" class="headerlink" title="SecutiryContextHolder"></a>SecutiryContextHolder</h2><p><strong>SecutiryContextHolder는</strong> <strong>ThreadLocal</strong>에 저장되는 <strong>SecurityContext</strong>를 쉽게 저장하고 가져올 수 있게 도와주는 Class이다. </p><p>SecurityContextHolder에서 SecurityContext를 저장하는 전략은 세가지가 있다.</p><ul><li><strong>MODE_THREADLOCAL</strong><ul><li>한 스레드당 securityContext를 저장하고 접근이 가능하다</li></ul></li><li><strong>MODE_INHERITABLETHREADLOCAL</strong><ul><li>메인 스레드와 자식 스레드에서 동일한 SecurityContext를 갖고 접근이 가능하다</li></ul></li><li><strong>MODE_GLOBAL</strong><ul><li>응용 프로그램내에서 단 하나의 SecurityContext를 저장하고 모두 접근이 가능하다.</li></ul></li></ul><h2 id="SecurityContext"><a href="#SecurityContext" class="headerlink" title="SecurityContext"></a>SecurityContext</h2><p>SecurityContext는 <strong>Authentication</strong> 객체를 보관하는 역할을 한다.</p><h2 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h2><p>Authentication 객체 내에는 자원에 접근하기 위한 대상의 정보와 권한 정보가 들어가 있다. Authentication 객체의 대표적인 구현 클래스는 <strong>UsernamePasswordAuthenticationToken</strong> 이 있다.</p><p>Authentication 객체 내에 Principal, Credentials, GrantedAuthority 가 있다.</p><ul><li><strong>Principal</strong><ul><li>Object 타입으로 보통은 User ID가 들어가거나 UserDetails가 들어가게 된다.</li></ul></li><li><strong>Credentials</strong><ul><li>Object 타입으로 보통은 User Password가 들어가 있다.</li></ul></li><li><strong>GrantedAuthority</strong><ul><li>접근 권한 목록들을 가지고 있다.</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://ckck803.github.io/categories/Spring-Boot/Spring-Security/">Spring Security</category>
      
      
      <category domain="https://ckck803.github.io/tags/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://ckck803.github.io/tags/Spring-Security/">Spring Security</category>
      
      
      <comments>https://ckck803.github.io/2021/03/20/algorithm/category/springboot/security/study/authentication/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Security - UsernamePasswordAuthenticationFilter</title>
      <link>https://ckck803.github.io/2021/03/20/algorithm/category/springboot/security/study/usernamepasswordAuthenticationFilter/</link>
      <guid>https://ckck803.github.io/2021/03/20/algorithm/category/springboot/security/study/usernamepasswordAuthenticationFilter/</guid>
      <pubDate>Sat, 20 Mar 2021 13:25:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/springboot/spring-boot-logo.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;UsernamePasswordAuthenticationFilter&quot;&gt;&lt;a href=&quot;#UsernamePasswordAuthentic</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/springboot/spring-boot-logo.png"></p><h1 id="UsernamePasswordAuthenticationFilter"><a href="#UsernamePasswordAuthenticationFilter" class="headerlink" title="UsernamePasswordAuthenticationFilter"></a>UsernamePasswordAuthenticationFilter</h1><p><strong>AbstractAuthenticationProcessingFilter</strong>를 상속한 객체로 Username과 Password를 이용해 보안인증을 진행할 때 사용하는 Filter이다.</p><h2 id="1-Authentication-객체-생성"><a href="#1-Authentication-객체-생성" class="headerlink" title="1. Authentication 객체 생성"></a>1. Authentication 객체 생성</h2><ul><li>사용자 요청으로 부터 username과 password를 가져온다.</li><li>username과 password를 Authentication을 구현한 <strong>UsernamePasswordAuthenticationToken</strong> 객체를 생성</li><li>생성된 <strong>Authentication</strong> 객체는 <strong>AuthenticationManager</strong> 객체를 통해 인증을 진행한다.</li><li>Spring Security에서는 AuthenticationManager 객체를 구현한 <strong>ProviderManager</strong> 객체를 사용한다.</li></ul><p><em>UsernamePasswordAuthenticationFilter.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Authentication <span class="title">attemptAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.postOnly &amp;&amp; !request.getMethod().equals(<span class="string">&quot;POST&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AuthenticationServiceException(<span class="string">&quot;Authentication method not supported: &quot;</span> + request.getMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// reqeust로부터 username을 가져온다.</span></span><br><span class="line">    String username = obtainUsername(request);</span><br><span class="line">    username = (username != <span class="keyword">null</span>) ? username : <span class="string">&quot;&quot;</span>;</span><br><span class="line">    username = username.trim();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// request로부터 password를 가져온다.</span></span><br><span class="line">    String password = obtainPassword(request);</span><br><span class="line">    password = (password != <span class="keyword">null</span>) ? password : <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    UsernamePasswordAuthenticationToken authRequest = <span class="keyword">new</span> UsernamePasswordAuthenticationToken(username, password);</span><br><span class="line">    <span class="comment">// Allow subclasses to set the &quot;details&quot; property</span></span><br><span class="line">    setDetails(request, authRequest);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.getAuthenticationManager().authenticate(authRequest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ProviderManager를-통한-인증-진행"><a href="#2-ProviderManager를-통한-인증-진행" class="headerlink" title="2. ProviderManager를 통한 인증 진행"></a>2. ProviderManager를 통한 인증 진행</h2><p><strong>ProviderManager</strong> 객체는 인증을 직접 진행하는 하지 않는다. 대신, 인증 위한 다양한 <strong>AuthenticationProvider</strong> 객체들을 가지고 있고 AuthenticationProvider 객체에게 <strong>인증을 위임</strong>하는 형태로 인증을 진행한다.</p><ul><li>ProviderManager에서 적절한 AuthenticationProvider 객체를 가져온다.</li><li>가져온 AuthenticationProvider를 이용해 Authentication객체 인증을 진행</li><li>인증이 완료 되면 <strong>새로운 Authentication 객체</strong>를 반환하게 된다.</li><li>만일 현재 ProviderManager에서 적절한 AuthenticationProvider 객체가 없다면 <strong>부모 ProviderManager</strong>로 이동해 인증을 시도한다.</li></ul><p><em>ProviderManager.java</em> <em>(인증 프로세스를 중심으로 보기 위해 예외처리와 관련된 부분은 삭제를 했다.)</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Authentication <span class="title">authenticate</span><span class="params">(Authentication authentication)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">    Class&lt;? extends Authentication&gt; toTest = authentication.getClass();</span><br><span class="line">    Authentication result = <span class="keyword">null</span>;</span><br><span class="line">    Authentication parentResult = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 인증을 진행하기 위한 AuthenticationProvider를 가져온다.</span></span><br><span class="line">    <span class="keyword">for</span> (AuthenticationProvider provider : getProviders()) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// AuthenticationProvider가 Authentication객체 인증을 지원하는지 확인</span></span><br><span class="line">        <span class="keyword">if</span> (!provider.supports(toTest)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = provider.authenticate(authentication);</span><br><span class="line">            <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 기존의 Authentication 객체와 result를 이용해 새로운 Authentication 객체를 생성</span></span><br><span class="line">                copyDetails(authentication, result);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (AccountStatusException | InternalAuthenticationServiceException ex) &#123;</span><br><span class="line">            prepareException(ex, authentication);</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (AuthenticationException ex) &#123;</span><br><span class="line">            lastException = ex;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result == <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// Allow the parent to try.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            parentResult = <span class="keyword">this</span>.parent.authenticate(authentication);</span><br><span class="line">            result = parentResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (ProviderNotFoundException ex) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (AuthenticationException ex) &#123;</span><br><span class="line">            parentException = ex;</span><br><span class="line">            lastException = ex;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.eraseCredentialsAfterAuthentication &amp;&amp; (result <span class="keyword">instanceof</span> CredentialsContainer)) &#123;</span><br><span class="line">            <span class="comment">// 인증을 완료한 후에 Authentication 객체에서 Credentials와 같은 민감한 정보를 지운다.</span></span><br><span class="line">            ((CredentialsContainer) result).eraseCredentials();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (parentResult == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.eventPublisher.publishAuthenticationSuccess(result);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 인증이 완료된 Authentication 객체를 반환한다.</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 다양한 예외 처리들 생략 //</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="인증-전-Authentication-객체"><a href="#인증-전-Authentication-객체" class="headerlink" title="인증 전 Authentication 객체"></a>인증 전 Authentication 객체</h4><p>인증 전 Authenticatin 객체내의 <strong>principal</strong>에는 username이 <strong>credentials</strong>는 password가 들어있고, 인증 유무를 나타내는 authenticated 값이 false로 나타나 있다.</p><p><img src="/images/springboot/security/spring-security/authentication.png"></p><h4 id="인증-후-Authentication-객체"><a href="#인증-후-Authentication-객체" class="headerlink" title="인증 후 Authentication 객체"></a>인증 후 Authentication 객체</h4><p>인증을 진행한 후 인증 전과 다르게 Authenticatin 객체의 principal에는 <strong>User</strong> 객체가 들어갔고 authenticated 값이 true가 됐다. 최종적으로 반환 될 때는 Authenticatin 객체에서 credentials를 지우고 반환한다.</p><p><img src="/images/springboot/security/spring-security/authentication-result.png"></p><h4 id="ProviderManager-hierarchy"><a href="#ProviderManager-hierarchy" class="headerlink" title="ProviderManager hierarchy"></a>ProviderManager hierarchy</h4><p>각 ProviderManager에는 AuthenticationProvider 객체들이 있다. 만약 현재의 ProviderManager에 적절한 AuthenticationProvider가 없을 경우 parent ProviderManager로 이동하게 된다. parent ProviderManager 역시 AuthenticationProvider 객체들이 존재한다. 여기서의 parent는 상속 개념이 아니라 field값으로 parent를 가지고 있다.</p><p><img src="/images/springboot/security/spring-security/providermanager-hierarchy.png"></p><h2 id="3-인증-완료-후-작업"><a href="#3-인증-완료-후-작업" class="headerlink" title="3. 인증 완료 후 작업"></a>3. 인증 완료 후 작업</h2><p>인증이 완료된 후 작업으로는 Session에 대한 처리와 SecurityContextHolder에 Authentication 객체를 등록하는 일이 남아 있다.</p><p><strong>AbstractAuthenticationProcessingFilter.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!requiresAuthentication(request, response)) &#123;</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 인증이 완료 된 후 Authentication 객체를 반환받는다.</span></span><br><span class="line">        Authentication authenticationResult = attemptAuthentication(request, response);</span><br><span class="line">        <span class="keyword">if</span> (authenticationResult == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Session에 대한 설정을 한다. Session Id를 변경</span></span><br><span class="line">        <span class="keyword">this</span>.sessionStrategy.onAuthentication(authenticationResult, request, response);</span><br><span class="line">        <span class="comment">// Authentication success</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.continueChainBeforeSuccessfulAuthentication) &#123;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// SecurityContextHlder에 Authentication 객체를 등록</span></span><br><span class="line">        successfulAuthentication(request, response, chain, authenticationResult);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (InternalAuthenticationServiceException failed) &#123;</span><br><span class="line">        <span class="keyword">this</span>.logger.error(<span class="string">&quot;An internal error occurred while trying to authenticate the user.&quot;</span>, failed);</span><br><span class="line">        unsuccessfulAuthentication(request, response, failed);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (AuthenticationException ex) &#123;</span><br><span class="line">        <span class="comment">// Authentication failed</span></span><br><span class="line">        unsuccessfulAuthentication(request, response, ex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SecurityContextHolder에-Authentication-객체를-등록"><a href="#SecurityContextHolder에-Authentication-객체를-등록" class="headerlink" title="SecurityContextHolder에 Authentication 객체를 등록"></a>SecurityContextHolder에 Authentication 객체를 등록</h4><p>successfulAuthentication 메소드는 인증이 성공적으로 이루어 졌을 때 호출되는 메소드로 크게 3가지 작업을 진행한다.</p><ul><li><strong>SecurityContextHolder</strong>로부터 <strong>SecurityContext</strong> 객체를 가져와 Authentication 객체를 넣어준다.</li><li><strong>Remember-Me</strong>에 대한 설정을 해준다.</li><li>인증이 완료 되면 successHandler를 이용해 정상적으로 인증이 완료 됐을 때의 작업을 진행한다.<ul><li>SecurityConfig에서 <strong>http.successHandler()</strong> 메소드로 등록한 Handler객체가 실행된다.</li></ul></li></ul><p><strong>AbstractAuthenticationProcessingFilter.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">successfulAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain,</span></span></span><br><span class="line"><span class="function"><span class="params">        Authentication authResult)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    SecurityContextHolder.getContext().setAuthentication(authResult);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.logger.isDebugEnabled()) &#123;</span><br><span class="line">        <span class="keyword">this</span>.logger.debug(LogMessage.format(<span class="string">&quot;Set SecurityContextHolder to %s&quot;</span>, authResult));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.rememberMeServices.loginSuccess(request, response, authResult);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.eventPublisher != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.eventPublisher.publishEvent(<span class="keyword">new</span> InteractiveAuthenticationSuccessEvent(authResult, <span class="keyword">this</span>.getClass()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.successHandler.onAuthenticationSuccess(request, response, authResult);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://ckck803.github.io/categories/Spring-Boot/Spring-Security/">Spring Security</category>
      
      
      <category domain="https://ckck803.github.io/tags/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://ckck803.github.io/tags/Spring-Security/">Spring Security</category>
      
      
      <comments>https://ckck803.github.io/2021/03/20/algorithm/category/springboot/security/study/usernamepasswordAuthenticationFilter/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>1194-달이차오른다_가자</title>
      <link>https://ckck803.github.io/2021/03/20/algorithm/baekjoon/BFS/1194-%EB%8B%AC%EC%9D%B4%EC%B0%A8%EC%98%A4%EB%A5%B8%EB%8B%A4-%EA%B0%80%EC%9E%90/</link>
      <guid>https://ckck803.github.io/2021/03/20/algorithm/baekjoon/BFS/1194-%EB%8B%AC%EC%9D%B4%EC%B0%A8%EC%98%A4%EB%A5%B8%EB%8B%A4-%EA%B0%80%EC%9E%90/</guid>
      <pubDate>Fri, 19 Mar 2021 17:21:07 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;백준-1194-달이-차오른다-가자&quot;&gt;&lt;a href=&quot;#백준-1194-달이-차오른다-가자&quot; class=&quot;headerlink&quot; title=&quot;백준 1194</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><h1 id="백준-1194-달이-차오른다-가자"><a href="#백준-1194-달이-차오른다-가자" class="headerlink" title="백준 1194 - 달이 차오른다. 가자"></a>백준 1194 - 달이 차오른다. 가자</h1><p><a href="https://www.acmicpc.net/problem/1194">https://www.acmicpc.net/problem/1194</a></p><h2 id="문제-해설"><a href="#문제-해설" class="headerlink" title="문제 해설"></a>문제 해설</h2><p>기존 BFS문제를 푸는 형식에 <strong>비트마스킹</strong>까지 더해진 문제이다. 비트마스킹을 통해 키를 가지고 있는 각각의 상태들을 체크할 수 있다. 키는 총 6개가 주어지기 때문에 <code>50x50x64 = 160,000</code> 의 공간 복잡도를 갖게 돼 메모리 제한에 걸리지 않는다.</p><h2 id="소스-코드"><a href="#소스-코드" class="headerlink" title="소스 코드"></a>소스 코드</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="keyword">char</span> Map[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">bool</span> check[<span class="number">1</span> &lt;&lt; <span class="number">6</span>][<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> startY, startX;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> key;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;point&gt; q;</span><br><span class="line">    q.push(&#123;startY, startX, <span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line">    check[<span class="number">0</span>][startY][startX] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> cntY = q.front().y;</span><br><span class="line">        <span class="keyword">int</span> cntX = q.front().x;</span><br><span class="line">        <span class="keyword">int</span> cntKey = q.front().key;</span><br><span class="line">        <span class="keyword">int</span> cntCount = q.front().count;</span><br><span class="line">        q.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Map[cntY][cntX] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> cntCount;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> ny = cntY + dy[i];</span><br><span class="line">            <span class="keyword">int</span> nx = cntX + dx[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> &gt;= ny || ny &gt; N || <span class="number">0</span> &gt;= nx || nx &gt; M) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (check[cntKey][ny][nx] == <span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Map[ny][nx] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                check[cntKey][ny][nx] = <span class="literal">true</span>;</span><br><span class="line">                q.push(&#123;ny, nx, cntKey, cntCount + <span class="number">1</span>&#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 열쇠에 마주쳤을 경우</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&#x27;a&#x27;</span> &lt;= Map[ny][nx] &amp;&amp; Map[ny][nx] &lt;= <span class="string">&#x27;f&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">int</span> key = (<span class="number">1</span> &lt;&lt; (Map[ny][nx] - <span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">                    check[cntKey | key][ny][nx] = <span class="literal">true</span>;</span><br><span class="line">                    q.push(&#123;ny, nx, cntKey | key, cntCount + <span class="number">1</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 문을 만났을 경우</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&#x27;A&#x27;</span> &lt;= Map[ny][nx] &amp;&amp; Map[ny][nx] &lt;= <span class="string">&#x27;F&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">int</span> door = (<span class="number">1</span> &lt;&lt; (Map[ny][nx] - <span class="string">&#x27;A&#x27;</span>));</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (door &amp; cntKey) &#123;</span><br><span class="line">                        check[cntKey][ny][nx] = <span class="literal">true</span>;</span><br><span class="line">                        q.push(&#123;ny, nx, cntKey, cntCount + <span class="number">1</span>&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 출구를 만났을 경우</span></span><br><span class="line">                <span class="keyword">if</span> (Map[ny][nx] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                    q.push(&#123;ny, nx, cntKey, cntCount + <span class="number">1</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= M; j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; Map[i][j];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Map[i][j] == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                startY = i;</span><br><span class="line">                startX = j;</span><br><span class="line">                Map[i][j] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bfs() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://ckck803.github.io/2021/03/20/algorithm/baekjoon/BFS/1194-%EB%8B%AC%EC%9D%B4%EC%B0%A8%EC%98%A4%EB%A5%B8%EB%8B%A4-%EA%B0%80%EC%9E%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Spring Security - WebSecurityConfigurerAdatper</title>
      <link>https://ckck803.github.io/2021/03/19/algorithm/category/springboot/security/study/web-security-configurer/</link>
      <guid>https://ckck803.github.io/2021/03/19/algorithm/category/springboot/security/study/web-security-configurer/</guid>
      <pubDate>Fri, 19 Mar 2021 13:25:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/springboot/spring-boot-logo.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Spring-Security-WebSecurityConfigurerAdatper&quot;&gt;&lt;a href=&quot;#Spring-Security-W</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/springboot/spring-boot-logo.png"></p><h1 id="Spring-Security-WebSecurityConfigurerAdatper"><a href="#Spring-Security-WebSecurityConfigurerAdatper" class="headerlink" title="Spring Security - WebSecurityConfigurerAdatper"></a>Spring Security - WebSecurityConfigurerAdatper</h1><p>스프링 Scurity에 대한 설정은 <strong>WebSecurityConfigurer</strong> 인터페이스 구현하거나 <strong>WebSecurityConfigurerAdapter</strong> 클래스를 상속해 설정을 할 수 있다.</p><h2 id="인증-방식-설정"><a href="#인증-방식-설정" class="headerlink" title="인증 방식 설정"></a>인증 방식 설정</h2><ul><li><strong>configure(AuthenticationManagerBuilder auth)</strong><ul><li><strong>인증 방식</strong>과 관련된 설정을 하기 위한 메소드</li><li>AuthenticationManagerBuilder는 <strong>인증객체</strong>(AuthenticationManager)를 생성하기 위한 클래스이다.</li><li>In Memory authentication나 UserDetailsService를 사용하는 <strong>다양한 인증 방식</strong>을 손 쉽게 구축할 수 있도록 지원한다.</li></ul></li></ul><p><em>configure(AuthenticationManagerBuilder auth)</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> CustomUserDetailsService customUserDetailsService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    auth.userDetailsService(customUserDetailsService);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="전역적인-Security-설정"><a href="#전역적인-Security-설정" class="headerlink" title="전역적인 Security 설정"></a>전역적인 Security 설정</h2><ul><li><strong>configure(WebSecurity web)</strong><ul><li><strong>전역적인 Security 설정</strong>을 하기 위해 사용하는 메소드</li><li>정적 파일에 대한 보안 예외처리와 같이 Security Filter Chain에 대한 예외처리를 할 때 사용한다.</li><li>WebSecurity 클래스는 Spring Security에서 <strong>FilterChainProxy</strong>를 생성한다.</li></ul></li></ul><p><em>configure(WebSecurity web)</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    web</span><br><span class="line">            .ignoring()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/css/**&quot;</span>, <span class="string">&quot;/js/**&quot;</span>)</span><br><span class="line">            .antMatchers(<span class="string">&quot;/favicon.ico&quot;</span>, <span class="string">&quot;/resources/**&quot;</span>, <span class="string">&quot;/error&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Resource별로-Security를-설정"><a href="#Resource별로-Security를-설정" class="headerlink" title="Resource별로 Security를 설정"></a>Resource별로 Security를 설정</h2><ul><li><strong>configure(HttpSecurity http)</strong><ul><li><strong>Resource</strong>별로 Security를 설정하기 위한 메소드이다.</li><li>HttpSecurity 클래스를 통해 <strong>인증</strong>, <strong>인가</strong>와 관련된 <strong>Web 기반의 보안 설정</strong>을 할 수 있다.</li><li>인증 : Form Login, Http Basic, OAuth2 Login 등</li><li>인가 : Matchers, Role, Authenticate, permit 등</li></ul></li></ul><p><em>configure(HttpSecurity http)</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 인가</span></span><br><span class="line">    http</span><br><span class="line">            .authorizeRequests() <span class="comment">// 인가에 대한 설정을 한다.</span></span><br><span class="line">            .antMatchers(<span class="string">&quot;/loginPage&quot;</span>).permitAll() <span class="comment">// /loginPage 접근시에는 인증이 필요하지 않다.</span></span><br><span class="line">            .anyRequest().authenticated(); <span class="comment">// 다른 모든 리소스에 접그하기 위해서는 인증이 필요하다</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 인증</span></span><br><span class="line">    http</span><br><span class="line">            .formLogin() <span class="comment">// Form Login 방식의 인증을 사용한다.</span></span><br><span class="line">            .loginPage(<span class="string">&quot;/loginPage&quot;</span>) <span class="comment">// 로그인 페이지를 설정한다.</span></span><br><span class="line">            .defaultSuccessUrl(<span class="string">&quot;/&quot;</span>) <span class="comment">// Login을 성공한 후 / 페이지로 이동하게 된다.</span></span><br><span class="line">            .failureUrl(<span class="string">&quot;/loginPage&quot;</span>) <span class="comment">// 로그인 실패시 /loginPage로 이동하게 된다.</span></span><br><span class="line">            .usernameParameter(<span class="string">&quot;username&quot;</span>) <span class="comment">// 요청 파라미터에서 username을 usernameParameter로 사용한다.</span></span><br><span class="line">            .passwordParameter(<span class="string">&quot;password&quot;</span>) <span class="comment">// 요청 파라미터에서 password를 passwordParameter로 사용한다.</span></span><br><span class="line">            .loginProcessingUrl(<span class="string">&quot;/login_proc&quot;</span>) <span class="comment">// 로그인을 진행하기 위한 URL</span></span><br><span class="line">            <span class="comment">// 로그인이 성공했을 때 처리하기 위한 Handler</span></span><br><span class="line">            .successHandler(<span class="keyword">new</span> AuthenticationSuccessHandler() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationSuccess</span><span class="params">(HttpServletRequest httpServletRequest</span></span></span><br><span class="line"><span class="function"><span class="params">                        , HttpServletResponse httpServletResponse</span></span></span><br><span class="line"><span class="function"><span class="params">                        , Authentication authentication)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">                    httpServletResponse.sendRedirect(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">// 로그인이 실패했을 때 처리하기 위한 Handler</span></span><br><span class="line">            .failureHandler(<span class="keyword">new</span> AuthenticationFailureHandler() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationFailure</span><span class="params">(HttpServletRequest httpServletRequest</span></span></span><br><span class="line"><span class="function"><span class="params">                        , HttpServletResponse httpServletResponse</span></span></span><br><span class="line"><span class="function"><span class="params">                        , AuthenticationException e)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">                    httpServletResponse.sendRedirect(<span class="string">&quot;/loginPage&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="패스워드-암호화"><a href="#패스워드-암호화" class="headerlink" title="패스워드 암호화"></a>패스워드 암호화</h2><p>Spring Boot에서는 <strong>사용자의 Password는 암호화된 상태로 저장</strong>이 돼야 한다. 암호화가 안된 상태로 저장하게 되면 사용자 인증시에 오류가 발생하게 된다. 그래서 Password를 암호화된 상태로 저장할 수 있도록 <strong>PasswordEncoder</strong> 인터페이스를 제공한다.</p><h4 id="PasswordEncoder"><a href="#PasswordEncoder" class="headerlink" title="PasswordEncoder"></a>PasswordEncoder</h4><ul><li>PasswordEncoder 인터페이스는 보통 <strong>패스워드를 단방향으로 변환</strong>한다. 즉 다시 원래대로 되돌릴 수 없다는 의미이다.</li><li>그래서 Hash 알고리즘을 사용한다.<ul><li>BcryptPasswordEncoder</li><li>Argon2PasswordEncoder</li><li>Pbkdf2PasswordEncoder</li><li>SCryptPasswordEncoder</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://ckck803.github.io/categories/Spring-Boot/Spring-Security/">Spring Security</category>
      
      
      <category domain="https://ckck803.github.io/tags/Spring-Boot/">Spring Boot</category>
      
      <category domain="https://ckck803.github.io/tags/Spring-Security/">Spring Security</category>
      
      
      <comments>https://ckck803.github.io/2021/03/19/algorithm/category/springboot/security/study/web-security-configurer/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>프로그래머스 - 수식 최대화</title>
      <link>https://ckck803.github.io/2021/03/15/algorithm/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/67257-%EC%88%98%EC%8B%9D%EC%B5%9C%EB%8C%80%ED%99%94/</link>
      <guid>https://ckck803.github.io/2021/03/15/algorithm/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/67257-%EC%88%98%EC%8B%9D%EC%B5%9C%EB%8C%80%ED%99%94/</guid>
      <pubDate>Mon, 15 Mar 2021 11:10:40 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/algorithm/programmers/programmers.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/67257&quot;&gt;https</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/algorithm/programmers/programmers.png"></p><p><a href="https://programmers.co.kr/learn/courses/30/lessons/67257">https://programmers.co.kr/learn/courses/30/lessons/67257</a></p><h2 id="문제-해설"><a href="#문제-해설" class="headerlink" title="문제 해설"></a>문제 해설</h2><p><strong>경우의 수</strong> 문제이다. 모든 경우의 연산자 우선순위를 만들어 해당 연산자 우선순위를 이용해 연산을 진행하면 된다.</p><p>중위표기식으로 나타난 식을 후위 표기식으로 바꿔서 문제를 해결 했다.</p><h3 id="경우의-수-만들기"><a href="#경우의-수-만들기" class="headerlink" title="경우의 수 만들기"></a>경우의 수 만들기</h3><p>만들 수 있는 모든 연산자 우선순위를 만들어줘야 한다. DFS를 이용해 모든 경우의 수를 만들어 줬다.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeAllCase</span><span class="params">(<span class="keyword">int</span> depth)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (depth == <span class="number">3</span>) &#123;</span><br><span class="line">        allCase.push_back(cntCase);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> cntOper = operation[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (check[i] == <span class="literal">false</span>) &#123;</span><br><span class="line">            check[i] = <span class="literal">true</span>;</span><br><span class="line">            cntCase[depth] = cntOper;</span><br><span class="line">            makeAllCase(depth + <span class="number">1</span>);</span><br><span class="line">            check[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="연산자-우선순위를-가반으로-한-연산"><a href="#연산자-우선순위를-가반으로-한-연산" class="headerlink" title="연산자 우선순위를 가반으로 한 연산"></a>연산자 우선순위를 가반으로 한 연산</h3><ol><li><p><strong>가장 높은 우선순위의 연산자가 들어왔을 때</strong></p><ul><li>Stack을 확인해 같은 먼저 들어온 같은 우선순위의 연산자가 있는지 확인한다.</li><li>같은 우선순위의 연산자가 Stack에 있는 경우 <code>pop</code> 해서 해당 연산을 진행한 후 지금 들어온 연산자를 <code>push</code>한다.</li><li>없는 경우에는 Stack에 <code>push</code> 한다.</li></ul></li><li><p><strong>두번째 우선 순위가 연산자가 들어온 경우</strong></p><ul><li>Stack을 확인해 우선순위가 같거나 큰 연산자가 없어질 때까지 연산을 진행한 후 <code>pop</code> 한다.</li><li>Stack에 우선순위가 같거나 큰 연산자가 없을 경우에는 Stack에 <code>push</code> 한다.</li></ul></li><li><p><strong>세번째 우선 순위의 연산자가 들어온 경우</strong></p><ul><li>Stack을 확인해 우선순위가 같거나 큰 연산자가 없어질 때까지 연산을 진행한 후 <code>pop</code> 한다.</li><li>Stack에 우선순위가 같거나 큰 연산자가 없을 경우에는 Stack에 <code>push</code> 한다.</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 첫번째 우선순위의 연산자가 들어온 경우</span></span><br><span class="line"><span class="keyword">if</span> (cntChar == cnt_priority[<span class="number">0</span>]) &#123;</span><br><span class="line">    opernand.push(stol(value));</span><br><span class="line">    value = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!operation.empty() &amp;&amp; operation.top() == cnt_priority[<span class="number">0</span>]) &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> value1 = opernand.top();</span><br><span class="line">        opernand.pop();</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> value2 = opernand.top();</span><br><span class="line">        opernand.pop();</span><br><span class="line">        <span class="keyword">char</span> oper = operation.top();</span><br><span class="line">        operation.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> result = calValue1Value2(value1, value2, oper);</span><br><span class="line">        opernand.push(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    operation.push(cntChar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 두번째 우선순위의 연산자가 들어온 경우</span></span><br><span class="line"><span class="keyword">if</span> (cntChar == cnt_priority[<span class="number">1</span>]) &#123;</span><br><span class="line">    opernand.push(stol(value));</span><br><span class="line">    value = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!operation.empty() &amp;&amp; operation.top() != cnt_priority[<span class="number">2</span>]) &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> value1 = opernand.top();</span><br><span class="line">        opernand.pop();</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> value2 = opernand.top();</span><br><span class="line">        opernand.pop();</span><br><span class="line">        <span class="keyword">char</span> oper = operation.top();</span><br><span class="line">        operation.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> result = calValue1Value2(value1, value2, oper);</span><br><span class="line">        opernand.push(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    operation.push(cntChar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 세번째 우선순위의 연산자가 들어온 경우</span></span><br><span class="line"><span class="keyword">if</span> (cntChar == cnt_priority[<span class="number">2</span>]) &#123;</span><br><span class="line">    opernand.push(stol(value));</span><br><span class="line">    value = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!operation.empty()) &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> value1 = opernand.top();</span><br><span class="line">        opernand.pop();</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> value2 = opernand.top();</span><br><span class="line">        opernand.pop();</span><br><span class="line">        <span class="keyword">char</span> oper = operation.top();</span><br><span class="line">        operation.pop();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> result = calValue1Value2(value1, value2, oper);</span><br><span class="line">        opernand.push(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    operation.push(cntChar);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Stack을-이용한-소스-코드"><a href="#Stack을-이용한-소스-코드" class="headerlink" title="Stack을 이용한 소스 코드"></a>Stack을 이용한 소스 코드</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> operation[<span class="number">3</span>] = &#123;<span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> check[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; <span class="title">cntCase</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt; allCase;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeAllCase</span><span class="params">(<span class="keyword">int</span> depth)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (depth == <span class="number">3</span>) &#123;</span><br><span class="line">        allCase.push_back(cntCase);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> cntOper = operation[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (check[i] == <span class="literal">false</span>) &#123;</span><br><span class="line">            check[i] = <span class="literal">true</span>;</span><br><span class="line">            cntCase[depth] = cntOper;</span><br><span class="line">            makeAllCase(depth + <span class="number">1</span>);</span><br><span class="line">            check[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calValue1Value2</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> value1, <span class="keyword">long</span> <span class="keyword">long</span> value2, <span class="keyword">char</span> oper)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (oper == <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">        result = value2 * value1;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&#x27;+&#x27;</span>) &#123;</span><br><span class="line">        result = value2 + value1;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        result = value2 - value1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">solveExpression</span><span class="params">(<span class="built_in">string</span> expression)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> maxValue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; cnt_priority : allCase) &#123;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; opernand;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; operation;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; expression.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> cntChar = expression[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&#x27;0&#x27;</span> &lt;= cntChar &amp;&amp; cntChar &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">                value += cntChar;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cntChar == cnt_priority[<span class="number">0</span>]) &#123;</span><br><span class="line">                opernand.push(stol(value));</span><br><span class="line">                value = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (!operation.empty() &amp;&amp; operation.top() == cnt_priority[<span class="number">0</span>]) &#123;</span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> value1 = opernand.top();</span><br><span class="line">                    opernand.pop();</span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> value2 = opernand.top();</span><br><span class="line">                    opernand.pop();</span><br><span class="line">                    <span class="keyword">char</span> oper = operation.top();</span><br><span class="line">                    operation.pop();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> result = calValue1Value2(value1, value2, oper);</span><br><span class="line">                    opernand.push(result);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                operation.push(cntChar);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cntChar == cnt_priority[<span class="number">1</span>]) &#123;</span><br><span class="line">                opernand.push(stol(value));</span><br><span class="line">                value = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (!operation.empty() &amp;&amp; operation.top() != cnt_priority[<span class="number">2</span>]) &#123;</span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> value1 = opernand.top();</span><br><span class="line">                    opernand.pop();</span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> value2 = opernand.top();</span><br><span class="line">                    opernand.pop();</span><br><span class="line">                    <span class="keyword">char</span> oper = operation.top();</span><br><span class="line">                    operation.pop();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> result = calValue1Value2(value1, value2, oper);</span><br><span class="line">                    opernand.push(result);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                operation.push(cntChar);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cntChar == cnt_priority[<span class="number">2</span>]) &#123;</span><br><span class="line">                opernand.push(stol(value));</span><br><span class="line">                value = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (!operation.empty()) &#123;</span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> value1 = opernand.top();</span><br><span class="line">                    opernand.pop();</span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> value2 = opernand.top();</span><br><span class="line">                    opernand.pop();</span><br><span class="line">                    <span class="keyword">char</span> oper = operation.top();</span><br><span class="line">                    operation.pop();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">long</span> <span class="keyword">long</span> result = calValue1Value2(value1, value2, oper);</span><br><span class="line">                    opernand.push(result);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                operation.push(cntChar);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        opernand.push(stol(value));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!operation.empty()) &#123;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> value1 = opernand.top();</span><br><span class="line">            opernand.pop();</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> value2 = opernand.top();</span><br><span class="line">            opernand.pop();</span><br><span class="line">            <span class="keyword">char</span> oper = operation.top();</span><br><span class="line">            operation.pop();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> result = calValue1Value2(value1, value2, oper);</span><br><span class="line">            opernand.push(<span class="built_in">abs</span>(result));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (maxValue &lt; opernand.top()) &#123;</span><br><span class="line">            maxValue = opernand.top();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">solution</span><span class="params">(<span class="built_in">string</span> expression)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> answer = <span class="number">0</span>;</span><br><span class="line">    makeAllCase(<span class="number">0</span>);</span><br><span class="line">    answer = solveExpression(expression);</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="dq를-이용한-문제-해결"><a href="#dq를-이용한-문제-해결" class="headerlink" title="dq를 이용한 문제 해결"></a>dq를 이용한 문제 해결</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> operation[<span class="number">3</span>] = &#123;<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;*&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> check[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; <span class="title">op</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&gt; operations;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; dq_opernand;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">char</span>&gt; dq_operator;</span><br><span class="line">ll max_value = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nPr</span><span class="params">(<span class="keyword">int</span> depth)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">3</span> == depth) &#123;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; <span class="title">v</span><span class="params">(op)</span></span>;</span><br><span class="line">        operations.push_back(op);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (check[i] == <span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        op[depth] = operation[i];</span><br><span class="line"></span><br><span class="line">        check[i] = <span class="literal">true</span>;</span><br><span class="line">        nPr(depth + <span class="number">1</span>);</span><br><span class="line">        check[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divideOperaion</span><span class="params">(<span class="built_in">string</span> expression)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; expression.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;0&#x27;</span> &lt;= expression[i] &amp;&amp; expression[i] &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            s += expression[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            dq_opernand.push_back(stol(s));</span><br><span class="line">            dq_operator.push_back(expression[i]);</span><br><span class="line">            s = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dq_opernand.push_back(stol(s));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">operValue</span><span class="params">(ll a, ll b, <span class="keyword">char</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="string">&#x27;+&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a * b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">operate</span><span class="params">(<span class="built_in">string</span> expression)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">deque</span>&lt;ll&gt; temp_opernand;</span><br><span class="line">    <span class="built_in">deque</span>&lt;<span class="keyword">char</span>&gt; temp_operator;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> o : operations) &#123;</span><br><span class="line">        <span class="function"><span class="built_in">deque</span>&lt;ll&gt; <span class="title">copy_opernand</span><span class="params">(dq_opernand)</span></span>;</span><br><span class="line">        <span class="function"><span class="built_in">deque</span>&lt;<span class="keyword">char</span>&gt; <span class="title">copy_operator</span><span class="params">(dq_operator)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> cnt_operation = o[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (!copy_operator.empty()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (copy_operator.front() == cnt_operation) &#123;</span><br><span class="line">                    ll value1 = copy_opernand.front();</span><br><span class="line">                    copy_opernand.pop_front();</span><br><span class="line"></span><br><span class="line">                    ll value2 = copy_opernand.front();</span><br><span class="line">                    copy_opernand.pop_front();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">char</span> oper = copy_operator.front();</span><br><span class="line">                    copy_operator.pop_front();</span><br><span class="line"></span><br><span class="line">                    ll result = operValue(value1, value2, oper);</span><br><span class="line"></span><br><span class="line">                    copy_opernand.push_front(result);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    temp_opernand.push_back(copy_opernand.front());</span><br><span class="line">                    temp_operator.push_back(copy_operator.front());</span><br><span class="line"></span><br><span class="line">                    copy_opernand.pop_front();</span><br><span class="line">                    copy_operator.pop_front();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (!copy_opernand.empty()) &#123;</span><br><span class="line">                temp_opernand.push_back(copy_opernand.front());</span><br><span class="line">                copy_opernand.pop_front();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (!temp_operator.empty()) &#123;</span><br><span class="line">                copy_operator.push_back(temp_operator.front());</span><br><span class="line">                temp_operator.pop_front();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (!temp_opernand.empty()) &#123;</span><br><span class="line">                copy_opernand.push_back(temp_opernand.front());</span><br><span class="line">                temp_opernand.pop_front();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        max_value = max(max_value, <span class="built_in">abs</span>(copy_opernand.front()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">solution</span><span class="params">(<span class="built_in">string</span> expression)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> answer;</span><br><span class="line">    nPr(<span class="number">0</span>);</span><br><span class="line">    divideOperaion(expression);</span><br><span class="line">    operate(expression);</span><br><span class="line">    answer = max_value;</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Programmers/">Programmers</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Programmers/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Programmers/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/">스택</category>
      
      
      <category domain="https://ckck803.github.io/tags/%ED%8B%80%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4-2/">틀렸습니다 2</category>
      
      <category domain="https://ckck803.github.io/tags/Java/">Java</category>
      
      <category domain="https://ckck803.github.io/tags/Programmers/">Programmers</category>
      
      
      <comments>https://ckck803.github.io/2021/03/15/algorithm/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/67257-%EC%88%98%EC%8B%9D%EC%B5%9C%EB%8C%80%ED%99%94/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 1406 - 후위표기식</title>
      <link>https://ckck803.github.io/2021/03/15/algorithm/baekjoon/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/1918-%ED%9B%84%EC%9C%84%ED%91%9C%EA%B8%B0%EC%8B%9D/</link>
      <guid>https://ckck803.github.io/2021/03/15/algorithm/baekjoon/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/1918-%ED%9B%84%EC%9C%84%ED%91%9C%EA%B8%B0%EC%8B%9D/</guid>
      <pubDate>Mon, 15 Mar 2021 11:10:40 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/baekjoon/baekjoon.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1918&quot;&gt;https://www.acmicpc.net/problem/1918&lt;/a&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/baekjoon/baekjoon.png"></p><p><a href="https://www.acmicpc.net/problem/1918">https://www.acmicpc.net/problem/1918</a></p><h2 id="문제-해설"><a href="#문제-해설" class="headerlink" title="문제 해설"></a>문제 해설</h2><p>문제를 해결할 때 후위 표기식에 대한 명확한 이해와 연산자 우선순위에 대해 고려 해야 한다.</p><p>연산자를 별도의 stack에 쌓아가면서 후위 표기식을 만든다. stack에 연산자를 넣기 전에 연산자 비교를 통해 stack에 넣을 려는 연산자 우선순위 보다 stack에 있는 연산자의 우선순위가 작을 때까지 계속해서 stack에서 연산자를 꺼내 후위 표기식에 추가해준다.</p><h4 id="연산자-우선순위"><a href="#연산자-우선순위" class="headerlink" title="연산자 우선순위"></a>연산자 우선순위</h4><ol><li><code>(</code>가 제일 높은 우선순위다.</li><li><code>*</code> 와 <code>/</code>가 그 다음 우선순위</li><li><code>+</code> 와 <code>-</code>가 다음 우선순위를 갖고 있다.</li><li><code>)</code>가 제일 낮은 우선순위다. <code>(</code>를 만날때까지 모든 연산자를 stack에서 꺼낸다.</li></ol><h2 id="소스-코드"><a href="#소스-코드" class="headerlink" title="소스 코드"></a>소스 코드</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="built_in">string</span> result;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; operation;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> cntChar = str[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cntChar == <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">            operation.push(cntChar);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cntChar == <span class="string">&#x27;*&#x27;</span> || cntChar == <span class="string">&#x27;/&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (!operation.empty() &amp;&amp; (operation.top() == <span class="string">&#x27;*&#x27;</span> || operation.top() == <span class="string">&#x27;/&#x27;</span>)) &#123;</span><br><span class="line">                result += operation.top();</span><br><span class="line">                operation.pop();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            operation.push(cntChar);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cntChar == <span class="string">&#x27;+&#x27;</span> || cntChar == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (!operation.empty() &amp;&amp; (operation.top() != <span class="string">&#x27;(&#x27;</span>)) &#123;</span><br><span class="line">                result += operation.top();</span><br><span class="line">                operation.pop();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            operation.push(cntChar);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cntChar == <span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (!operation.empty() &amp;&amp; operation.top() != <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                result += operation.top();</span><br><span class="line">                operation.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            operation.pop();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result += cntChar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!operation.empty()) &#123;</span><br><span class="line">        result += operation.top();</span><br><span class="line">        operation.pop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; result &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://ckck803.github.io/categories/Programming/">Programming</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/">Beakjoon</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/">자료구조</category>
      
      <category domain="https://ckck803.github.io/categories/Programming/Beakjoon/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/">스택</category>
      
      
      <category domain="https://ckck803.github.io/tags/beakjoon/">beakjoon</category>
      
      <category domain="https://ckck803.github.io/tags/%ED%8B%80%EB%A0%B8%EC%8A%B5%EB%8B%88%EB%8B%A4-2/">틀렸습니다 2</category>
      
      <category domain="https://ckck803.github.io/tags/Java/">Java</category>
      
      
      <comments>https://ckck803.github.io/2021/03/15/algorithm/baekjoon/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%8A%A4%ED%83%9D/1918-%ED%9B%84%EC%9C%84%ED%91%9C%EA%B8%B0%EC%8B%9D/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
